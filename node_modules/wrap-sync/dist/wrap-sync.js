/**
 * wrap-sync - Take a sync function and make it async, passing its return value to a callback.
 * @version v1.0.0
 * @link    https://github.com/Kikobeats/wrap-sync
 * @license MIT
 */require=function r(t,n,e){function o(i,a){if(!n[i]){if(!t[i]){var c="function"==typeof require&&require;if(!a&&c)return c(i,!0);if(u)return u(i,!0);var f=new Error("Cannot find module '"+i+"'");throw f.code="MODULE_NOT_FOUND",f}var s=n[i]={exports:{}};t[i][0].call(s.exports,function(r){var n=t[i][1][r];return o(n?n:r)},s,s.exports,r,t,n,e)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<e.length;i++)o(e[i]);return o}({1:[function(r,t,n){function e(r){var t=typeof r;return!!r&&("object"==t||"function"==t)}t.exports=e},{}],2:[function(r,t,n){function e(r,t){if("function"!=typeof r)throw new TypeError(o);return t=u(void 0===t?r.length-1:+t||0,0),function(){for(var n=arguments,e=-1,o=u(n.length-t,0),i=Array(o);++e<o;)i[e]=n[t+e];switch(t){case 0:return r.call(this,i);case 1:return r.call(this,n[0],i);case 2:return r.call(this,n[0],n[1],i)}var a=Array(t+1);for(e=-1;++e<t;)a[e]=n[e];return a[t]=i,r.apply(this,a)}}var o="Expected a function",u=Math.max;t.exports=e},{}],"wrap-sync":[function(r,t,n){"use strict";var e=r("lodash.isobject"),o=r("lodash.restparam");t.exports=function(r){return o(function(t){var n,o=t.pop();try{n=r.apply(this,t)}catch(u){return o(u)}e(n)&&"function"==typeof n.then?n.then(function(r){o(null,r)})["catch"](function(r){o(r.message?r:new Error(r))}):o(null,n)})}},{"lodash.isobject":1,"lodash.restparam":2}]},{},[]);